// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogNewInvoice extends ethereum.Event {
  get params(): LogNewInvoice__Params {
    return new LogNewInvoice__Params(this);
  }
}

export class LogNewInvoice__Params {
  _event: LogNewInvoice;

  constructor(event: LogNewInvoice) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get invoice(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class UpdateResolutionRate extends ethereum.Event {
  get params(): UpdateResolutionRate__Params {
    return new UpdateResolutionRate__Params(this);
  }
}

export class UpdateResolutionRate__Params {
  _event: UpdateResolutionRate;

  constructor(event: UpdateResolutionRate) {
    this._event = event;
  }

  get resolver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resolutionRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get details(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class SmartInvoiceFactory extends ethereum.SmartContract {
  static bind(address: Address): SmartInvoiceFactory {
    return new SmartInvoiceFactory("SmartInvoiceFactory", address);
  }

  MAX_DURATION(): BigInt {
    let result = super.call("MAX_DURATION", "MAX_DURATION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_DURATION", "MAX_DURATION():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  create(
    _client: Address,
    _provider: Address,
    _resolverType: i32,
    _resolver: Address,
    _token: Address,
    _amounts: Array<BigInt>,
    _terminationTime: BigInt,
    _details: Bytes
  ): Address {
    let result = super.call(
      "create",
      "create(address,address,uint8,address,address,uint256[],uint256,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_client),
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_resolverType)),
        ethereum.Value.fromAddress(_resolver),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromUnsignedBigInt(_terminationTime),
        ethereum.Value.fromFixedBytes(_details)
      ]
    );

    return result[0].toAddress();
  }

  try_create(
    _client: Address,
    _provider: Address,
    _resolverType: i32,
    _resolver: Address,
    _token: Address,
    _amounts: Array<BigInt>,
    _terminationTime: BigInt,
    _details: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "create",
      "create(address,address,uint8,address,address,uint256[],uint256,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_client),
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_resolverType)),
        ethereum.Value.fromAddress(_resolver),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromUnsignedBigInt(_terminationTime),
        ethereum.Value.fromFixedBytes(_details)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getInvoiceAddress(_id: BigInt): Address {
    let result = super.call(
      "getInvoiceAddress",
      "getInvoiceAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );

    return result[0].toAddress();
  }

  try_getInvoiceAddress(_id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getInvoiceAddress",
      "getInvoiceAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  id(): BigInt {
    let result = super.call("id", "id():(uint256)", []);

    return result[0].toBigInt();
  }

  try_id(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("id", "id():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  resolutionRates(param0: Address): BigInt {
    let result = super.call(
      "resolutionRates",
      "resolutionRates(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_resolutionRates(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "resolutionRates",
      "resolutionRates(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get _client(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _provider(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _resolverType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _resolver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _terminationTime(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _details(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class UpdateResolutionRateCall extends ethereum.Call {
  get inputs(): UpdateResolutionRateCall__Inputs {
    return new UpdateResolutionRateCall__Inputs(this);
  }

  get outputs(): UpdateResolutionRateCall__Outputs {
    return new UpdateResolutionRateCall__Outputs(this);
  }
}

export class UpdateResolutionRateCall__Inputs {
  _call: UpdateResolutionRateCall;

  constructor(call: UpdateResolutionRateCall) {
    this._call = call;
  }

  get _resolutionRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _details(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpdateResolutionRateCall__Outputs {
  _call: UpdateResolutionRateCall;

  constructor(call: UpdateResolutionRateCall) {
    this._call = call;
  }
}
